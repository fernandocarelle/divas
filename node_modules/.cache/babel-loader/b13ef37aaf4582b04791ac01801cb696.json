{"ast":null,"code":"import _defineProperty from \"/Users/fernandocarelle/Desktop/divas/divas-site/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fernandocarelle/Desktop/divas/divas-site/src/Sections/CommentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../axios-orders';\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        id: null,\n        postId: null,\n        username: '',\n        message: ''\n      },\n      commentPosted: false\n    };\n\n    this.inputChangeHandler = e => {\n      const updatedComment = _objectSpread({}, this.state.comment);\n\n      updatedComment[e.target.name] = e.target.value;\n      updatedComment.id = Math.floor(Math.random() * 100);\n      updatedComment.postId = this.props.postId;\n      this.setState(_objectSpread({}, this.state, {\n        comment: updatedComment\n      }));\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault(); // console.log(prevComments, 'Comment form')\n\n      axios.post(\"/comments.json\", this.state.comment).then(res => {\n        // console.log(\"Successfull\")\n        this.setState(_objectSpread({}, this.state, {\n          commentPosted: true\n        }));\n      }).catch(err => {\n        console.log(err.message);\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.props)\n    let message = '';\n\n    if (this.state.commentPosted) {\n      message = \"Your comment has been successfully posted. Reload to see your comment.\";\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, message, React.createElement(\"div\", {\n      className: \"comment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"comment-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Leave a comment\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Your name\",\n      onChange: this.inputChangeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"message\",\n      placeholder: \"Write Comments\",\n      onChange: this.inputChangeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-filled btn-round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/fernandocarelle/Desktop/divas/divas-site/src/Sections/CommentForm.js"],"names":["React","Component","axios","CommentForm","state","comment","id","postId","username","message","commentPosted","inputChangeHandler","e","updatedComment","target","name","value","Math","floor","random","props","setState","onSubmitHandler","preventDefault","post","then","res","catch","err","console","log","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,EAAE,EAAE,IADC;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILC,QAAAA,OAAO,EAAE;AAJJ,OADL;AAOJC,MAAAA,aAAa,EAAE;AAPX,KAFwB;;AAAA,SAYhCC,kBAZgC,GAYVC,CAAD,IAAO;AAExB,YAAMC,cAAc,qBAAO,KAAKT,KAAL,CAAWC,OAAlB,CAApB;;AACAQ,MAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAd,GAAgCH,CAAC,CAACE,MAAF,CAASE,KAAzC;AACAH,MAAAA,cAAc,CAACP,EAAf,GAAoBW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAApB;AACAN,MAAAA,cAAc,CAACN,MAAf,GAAwB,KAAKa,KAAL,CAAWb,MAAnC;AAGA,WAAKc,QAAL,mBACO,KAAKjB,KADZ;AAEIC,QAAAA,OAAO,EAAEQ;AAFb;AAIH,KAxB+B;;AAAA,SA0BhCS,eA1BgC,GA0BbV,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACW,cAAF,GADqB,CAGrB;;AACArB,MAAAA,KAAK,CAACsB,IAAN,CAAW,gBAAX,EAA6B,KAAKpB,KAAL,CAAWC,OAAxC,EACKoB,IADL,CACWC,GAAG,IAAI;AACV;AACA,aAAKL,QAAL,mBACO,KAAKjB,KADZ;AAEIM,UAAAA,aAAa,EAAE;AAFnB;AAIH,OAPL,EAQKiB,KARL,CAQYC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACnB,OAAhB;AACH,OAVL;AAWH,KAzC+B;AAAA;;AA2ChCsB,EAAAA,MAAM,GAAG;AACL;AACA,QAAItB,OAAO,GAAG,EAAd;;AACA,QAAG,KAAKL,KAAL,CAAWM,aAAd,EAA6B;AACzBD,MAAAA,OAAO,GAAG,wEAAV;AACH;;AACD,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMA,OADN,EAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAM,MAAA,QAAQ,EAAG,KAAKa,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,WAAW,EAAC,WAA/C;AAA2D,MAAA,QAAQ,EAAG,KAAKX,kBAA3E;AAAgG,MAAA,QAAQ,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAU,MAAA,IAAI,EAAC,SAAf;AAAyB,MAAA,WAAW,EAAC,gBAArC;AAAsD,MAAA,QAAQ,EAAG,KAAKA,kBAAtE;AAA2F,MAAA,QAAQ,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFJ,CAFJ,CADJ;AAaH;;AA9D+B;;AAiEpC,eAAeR,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from '../axios-orders'\r\n\r\nclass CommentForm extends Component {\r\n\r\n    state = {\r\n        comment: {\r\n            id: null,\r\n            postId: null,\r\n            username: '',\r\n            message: ''\r\n        },\r\n        commentPosted: false\r\n    }\r\n\r\n    inputChangeHandler = (e) => {\r\n\r\n        const updatedComment = {...this.state.comment}\r\n        updatedComment[e.target.name] = e.target.value\r\n        updatedComment.id = Math.floor(Math.random() * 100)\r\n        updatedComment.postId = this.props.postId\r\n\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            comment: updatedComment\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        // console.log(prevComments, 'Comment form')\r\n        axios.post(\"/comments.json\", this.state.comment)\r\n            .then( res => { \r\n                // console.log(\"Successfull\")\r\n                this.setState({\r\n                    ...this.state,\r\n                    commentPosted: true\r\n                })\r\n            })\r\n            .catch( err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        let message = ''\r\n        if(this.state.commentPosted) {\r\n            message = \"Your comment has been successfully posted. Reload to see your comment.\"\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                { message }\r\n                <div className=\"comment-form\">\r\n                    <h4 className=\"comment-title\">Leave a comment</h4>\r\n                    <form onSubmit={ this.onSubmitHandler }>\r\n                        <input name=\"username\" type=\"text\" placeholder=\"Your name\" onChange={ this.inputChangeHandler } required />\r\n                        <textarea name=\"message\" placeholder=\"Write Comments\" onChange={ this.inputChangeHandler } required></textarea>\r\n                        <button type=\"submit\" className=\"btn btn-filled btn-round\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}